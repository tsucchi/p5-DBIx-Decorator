# NAME

DBIx::Decorator - extensible DBI wrapper using Decorator pattern

# SYNOPSIS

    use DBIx::Decorator;
    use DBI;
    use DBIx::Decorator::TransactionManager;
    my $dbh = DBIx::Decorator::TransactionManager->new(DBI->connect(...));
    my $txn = $dbh->txn_scope(); # got transaction object from wrapped dbh.
    my $row = $dbh->selectrow_hashref("SELECT * FROM employee WHERE id=?", undef, 123); #normal usage

# IMPORTANT NOTICE

This module is POC(Proof of Concept) module. I don't test and use this module in production environment.
Please DO NOT USE. 

If you want to manage DB connection and transaction, I recommend to use [DBIx::Handler](http://search.cpan.org/perldoc?DBIx::Handler).

# DESCRIPTION

DBIx::Decorator is

# METHODS

## $wrapped\_dbh = DBIx::Decorator->new($dbh)

create instance. returns wrapped $dbh. 



# AUTHOR

Takuya Tsuchida <tsucchi {at} cpan.org>

# SEE ALSO

[DBIx::Decorator::TransactionManager](http://search.cpan.org/perldoc?DBIx::Decorator::TransactionManager)



# LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
